{"name":"Generate Currency for Selected Tokens (Customizable)","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.RZ3ozq4O3xgvRFYJ"}},"scope":"global","command":"function generateCurrencyForSelectedTokens() {\n  new Dialog({\n    title: 'Currency Generator',\n    content: `Generate currency for all selected tokens?`,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-ban\"></i>',\n        label: 'Cancel',\n      },\n      yes: {\n        icon: '<i class=\"fas fa-thumbs-up\"></i>',\n        label: 'Generate',\n        callback: (html) => {\n          if (canvas.tokens.controlled.length == 0) {\n            ui.notifications.error(\n              'Tokens must be selected to generate currency'\n            );\n            return;\n          }\n\n          const filtered = canvas.tokens.controlled.filter((token) => {\n            if (token.actor.hasPlayerOwner) {\n              ui.notifications.warn(\n                `Cannot modify player owned token ${token.name}`\n              );\n              return false;\n            }\n\n            if (token.actor.data.token.actorLink) {\n              ui.notifications.warn(`Cannot modify linked token ${token.name}`);\n              return false;\n            }\n\n            if (token.actor.data.type != 'npc') {\n              ui.notifications.warn(\n                `Cannot modify non-NPC token ${token.name}`\n              );\n              return false;\n            }\n            return true;\n          });\n          filtered.forEach(async (token) => {\n            const actor = game.actors.get(token.data.actorId);\n\n            const pocketChange = new game.dfreds.PocketChange();\n            const currency = pocketChange.generateCurrency(actor);\n            let newCurrencyData = {};\n            newCurrencyData['data.currency'] = currency;\n\n            await token.actor.update(newCurrencyData);\n          });\n          ui.notifications.info(\n            `Generated currency for ${filtered.length} tokens`\n          );\n        },\n      },\n    },\n    default: 'no',\n  }).render(true);\n}\n\ngenerateCurrencyForSelectedTokens();","author":"LqsOjvGNORiotzcI","img":"icons/commodities/currency/coins-assorted-mix-copper-silver-gold.webp","actorIds":[],"_id":"HfojCT525Pd19cwo"}
{"name":"Convert Selected Tokens to Loot","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.uXaOY2ziotAvxdrg"}},"scope":"global","command":"const macroSupport = new game.dfreds.MacroSupport();\nmacroSupport.convertSelectedTokensToLoot();","author":"LqsOjvGNORiotzcI","img":"icons/containers/bags/coinpouch-simple-leather-silver-brown.webp","actorIds":[],"_id":"hLgNNTD0QkC3ReSM"}
{"name":"Convert Selected Tokens to Loot (Customizable)","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.mnQeZ47SDbSZ9jvn"}},"scope":"global","command":"function convertSelectedTokensToLoot() {\n  new Dialog({\n    title: 'Loot Converter',\n    content: `Convert all selected tokens to loot?`,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-ban\"></i>',\n        label: 'Cancel',\n      },\n      yes: {\n        icon: '<i class=\"fas fa-thumbs-up\"></i>',\n        label: 'Convert',\n        callback: (html) => {\n          if (canvas.tokens.controlled.length == 0) {\n            ui.notifications.error(\n              'Tokens must be selected to convert to loot'\n            );\n            return;\n          }\n\n          const filtered = canvas.tokens.controlled.filter((token) => {\n            if (token.actor.hasPlayerOwner) {\n              ui.notifications.warn(\n                `Cannot modify player owned token ${token.name}`\n              );\n              return false;\n            }\n\n            if (token.actor.data.token.actorLink) {\n              ui.notifications.warn(`Cannot modify linked token ${token.name}`);\n              return false;\n            }\n\n            if (token.actor.data.type != 'npc') {\n              ui.notifications.warn(\n                `Cannot modify non-NPC token ${token.name}`\n              );\n              return false;\n            }\n\n            return true;\n          });\n          filtered.forEach(async (token) => {\n            // Remove natural weapons, natural armor, class features, spells, and feats.\n            let newItems = token.actor.data.items.filter((item) => {\n              if (item.type == 'weapon') {\n                return item.data.weaponType != 'natural';\n              }\n              if (item.type == 'equipment') {\n                if (!item.data.armor) return true;\n                return item.data.armor.type != 'natural';\n              }\n              return !['class', 'spell', 'feat'].includes(item.type);\n            });\n\n            let newCurrencyData = {};\n\n            // Handles if they already have currency set somehow\n            if (typeof token.actor.data.data.currency.cp === 'number') {\n              newCurrencyData['data.currency'] = {\n                cp: { value: token.actor.data.data.currency.cp },\n                ep: { value: token.actor.data.data.currency.ep },\n                gp: { value: token.actor.data.data.currency.gp },\n                pp: { value: token.actor.data.data.currency.pp },\n                sp: { value: token.actor.data.data.currency.sp },\n              };\n            }\n\n            await token.actor.update(newCurrencyData);\n            await token.actor.setFlag(\n              'core',\n              'sheetClass',\n              'dnd5e.LootSheet5eNPC'\n            );\n            await token.update({\n              'actorData.permission.default': ENTITY_PERMISSIONS.OBSERVER,\n              overlayEffect: `icons/svg/chest.svg`,\n              // effects: ['icons/containers/bags/pouch-simple-brown.webp'],\n            });\n            await token.actor.update({ items: newItems });\n          });\n          ui.notifications.info(`Converted ${filtered.length} tokens to loot`);\n        },\n      },\n    },\n    default: 'no',\n  }).render(true);\n}\n\nconvertSelectedTokensToLoot();","author":"LqsOjvGNORiotzcI","img":"icons/containers/bags/coinpouch-simple-leather-silver-brown.webp","actorIds":[],"_id":"l8aCjoGCzhomsOjL"}
{"name":"Generate Currency for Selected Tokens","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.R9w15lFmGsAIHCQK"}},"scope":"global","command":"const macroSupport = new game.dfreds.MacroSupport();\nmacroSupport.generateCurrencyForSelectedTokens();","author":"LqsOjvGNORiotzcI","img":"icons/commodities/currency/coins-assorted-mix-copper-silver-gold.webp","actorIds":[],"_id":"luHeGvrjMKrovtsK"}
{"name":"Generate Currency and Convert to Loot for Selected Tokens","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.AeNaDDCdrTvBlqNJ"}},"scope":"global","command":"const macroSupport = new game.dfreds.MacroSupport();\nmacroSupport.generateCurrencyAndConvertToLootForSelectedTokens();","author":"LqsOjvGNORiotzcI","img":"icons/containers/bags/coinpouch-gold-red.webp","actorIds":[],"_id":"syQHfOfeUzlvYDGQ"}
{"$$deleted":true,"_id":"l8aCjoGCzhomsOjL"}
{"name":"Convert Selected Tokens to Loot (Customizable)","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.mnQeZ47SDbSZ9jvn"}},"scope":"global","command":"function convertSelectedTokensToLoot() {\n  new Dialog({\n    title: 'Loot Converter',\n    content: `Convert all selected tokens to loot?`,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-ban\"></i>',\n        label: 'Cancel',\n      },\n      yes: {\n        icon: '<i class=\"fas fa-thumbs-up\"></i>',\n        label: 'Convert',\n        callback: (html) => {\n          if (canvas.tokens.controlled.length == 0) {\n            ui.notifications.error(\n              'Tokens must be selected to convert to loot'\n            );\n            return;\n          }\n\n          const filtered = canvas.tokens.controlled.filter((token) => {\n            if (token.actor.hasPlayerOwner) {\n              ui.notifications.warn(\n                `Cannot modify player owned token ${token.name}`\n              );\n              return false;\n            }\n\n            if (token.actor.data.token.actorLink) {\n              ui.notifications.warn(`Cannot modify linked token ${token.name}`);\n              return false;\n            }\n\n            if (token.actor.data.type != 'npc') {\n              ui.notifications.warn(\n                `Cannot modify non-NPC token ${token.name}`\n              );\n              return false;\n            }\n\n            return true;\n          });\n          filtered.forEach(async (token) => {\n            // Remove natural weapons, natural armor, class features, spells, and feats.\n            let newItems = token.actor.data.items\n              .filter((item) => {\n                if (item.type == 'weapon') {\n                  return item.data.weaponType != 'natural';\n                }\n                if (item.type == 'equipment') {\n                  if (!item.data.armor) return true;\n                  return item.data.armor.type != 'natural';\n                }\n                return !['class', 'spell', 'feat'].includes(item.type);\n              })\n              .map((item) => {\n                item.data.equipped = false;\n                return item;\n              });\n\n            let newCurrencyData = {};\n\n            // Handles if they already have currency set somehow\n            if (typeof token.actor.data.data.currency.cp === 'number') {\n              newCurrencyData['data.currency'] = {\n                cp: { value: token.actor.data.data.currency.cp },\n                ep: { value: token.actor.data.data.currency.ep },\n                gp: { value: token.actor.data.data.currency.gp },\n                pp: { value: token.actor.data.data.currency.pp },\n                sp: { value: token.actor.data.data.currency.sp },\n              };\n            }\n\n            await token.actor.update(newCurrencyData);\n            await token.actor.setFlag(\n              'core',\n              'sheetClass',\n              'dnd5e.LootSheet5eNPC'\n            );\n            await token.update({\n              'actorData.permission.default': ENTITY_PERMISSIONS.OBSERVER,\n              overlayEffect: `icons/svg/chest.svg`,\n              // effects: ['icons/containers/bags/pouch-simple-brown.webp'],\n            });\n            await token.actor.update({ items: newItems });\n          });\n          ui.notifications.info(`Converted ${filtered.length} tokens to loot`);\n        },\n      },\n    },\n    default: 'no',\n  }).render(true);\n}\n\nconvertSelectedTokensToLoot();","author":"LqsOjvGNORiotzcI","img":"icons/containers/bags/coinpouch-simple-leather-silver-brown.webp","actorIds":[],"_id":"gjGrptbXVBbhFqSX"}
