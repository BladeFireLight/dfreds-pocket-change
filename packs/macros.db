{"name":"Make Tokens Lootable","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.lTESjP19Phr4uVmk"}},"scope":"global","command":"// For all currently selected tokens, change their actor sheets to LootSheetNPC,\n// delete all their Feat items, set token Observer privileges for players, and add a treasure\n// overlay icon to the body of each. Asks for confirmation because of the deletions.\n\nlet d = new Dialog({\n  title: 'Loot Converter',\n  content: `Make all selected tokens lootable?`,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-ban\"></i>',\n      label: 'Cancel',\n    },\n    yes: {\n      icon: '<i class=\"fas fa-thumbs-up\"></i>',\n      label: 'Convert',\n      callback: (html) => {\n        main();\n      },\n    },\n  },\n  default: 'no',\n}).render(true);\n\nasync function main() {\n  for (const token of canvas.tokens.controlled) { \n    if (token.actor.hasPlayerOwner) {\n      ui.notifications.warn('Cannot convert a player owned token to loot');\n      continue;\n    }\n\n    if (token.actor.data.token.actorLink) {\n      ui.notifications.warn('Cannot convert a linked token to loot');\n      continue;\n    }\n\n    if (token.actor.data.type != 'npc') {\n      ui.notifications.warn('Cannot convert a non-NPC token to loot');\n      continue;\n    }\n\n    let newItems = token.actor.data.items.filter((item) => {\n      if (item.type == 'weapon') {\n        return item.data.weaponType != 'natural';\n      }\n      if (item.type == 'equipment') {\n        if (!item.data.armor) return true;\n        return item.data.armor.type != 'natural';\n      }\n      return !['class', 'spell', 'feat'].includes(item.type);\n    });\n\n    let newCurrencyData = {};\n\n    if (typeof token.actor.data.data.currency.cp === 'number') {\n      newCurrencyData['data.currency'] = {\n        cp: { value: controlledToken.actor.data.data.currency.cp },\n        ep: { value: controlledToken.actor.data.data.currency.ep },\n        gp: { value: controlledToken.actor.data.data.currency.gp },\n        pp: { value: controlledToken.actor.data.data.currency.pp },\n        sp: { value: controlledToken.actor.data.data.currency.sp },\n      };\n    }\n    await token.actor.update(newCurrencyData);\n    await token.actor.setFlag('core', 'sheetClass', 'dnd5e.LootSheet5eNPC');\n    await token.update({\n      'actorData.permission.default': ENTITY_PERMISSIONS.OBSERVER,\n      overlayEffect: `icons/svg/chest.svg`,\n    });\n    await token.actor.update({ items: newItems });\n  }\n}","author":"LqsOjvGNORiotzcI","img":"icons/commodities/currency/coins-assorted-mix-copper-silver-gold.webp","actorIds":[],"_id":"lNXUSPreIX4nVvWy"}
{"name":"Make Token Lootable","permission":{"default":0,"LqsOjvGNORiotzcI":3},"type":"script","flags":{"core":{"sourceId":"Macro.teK782KanQGZs1TY"}},"scope":"global","command":"// For the currently selected token, change their actor sheet to LootSheetNPC,\n// delete all Feat items, sets token Observer privs for players, and adds a treasure\n// overlay icon to the body. Asks for confirmation because of the deletions.\n\nlet d = new Dialog({\n  title: 'Loot Converter',\n  content: `Make ${token.name} lootable?`,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-ban\"></i>',\n      label: 'Cancel',\n    },\n    yes: {\n      icon: '<i class=\"fas fa-thumbs-up\"></i>',\n      label: 'Convert',\n      callback: (html) => {\n        main();\n      },\n    },\n  },\n  default: 'no',\n}).render(true);\n\nasync function main() {\n  if (token.actor.hasPlayerOwner) {\n    ui.notifications.warn('Cannot convert a player owned token to loot');\n    return;\n  }\n\n  if (token.actor.data.token.actorLink) {\n    ui.notifications.warn('Cannot convert a linked token to loot');\n    return;\n  }\n\n  if (token.actor.data.type != 'npc') {\n    ui.notifications.warn('Cannot convert a non-NPC token to loot');\n    return;\n  }\n\n  let newItems = token.actor.data.items.filter((item) => {\n    if (item.type == 'weapon') {\n      return item.data.weaponType != 'natural';\n    }\n    if (item.type == 'equipment') {\n      if (!item.data.armor) return true;\n      return item.data.armor.type != 'natural';\n    }\n    return !['class', 'spell', 'feat'].includes(item.type);\n  });\n\n  let newCurrencyData = {};\n\n  if (typeof token.actor.data.data.currency.cp === 'number') {\n    newCurrencyData['data.currency'] = {\n      cp: { value: token.actor.data.data.currency.cp },\n      ep: { value: token.actor.data.data.currency.ep },\n      gp: { value: token.actor.data.data.currency.gp },\n      pp: { value: token.actor.data.data.currency.pp },\n      sp: { value: token.actor.data.data.currency.sp },\n    };\n  }\n  await token.actor.update(newCurrencyData);\n  await token.actor.setFlag('core', 'sheetClass', 'dnd5e.LootSheet5eNPC');\n  await token.update({\n    'actorData.permission.default': ENTITY_PERMISSIONS.OBSERVER,\n    overlayEffect: `icons/svg/chest.svg`,\n  });\n  await token.actor.update({ items: newItems });\n}","author":"LqsOjvGNORiotzcI","img":"icons/commodities/currency/coin-embossed-gold-stag.webp","actorIds":[],"_id":"zaYNcHIRqqWI8oQG"}
